{"version":3,"file":"index.modern.js","sources":["../src/render/createElement.ts","../src/models/Hook.ts","../src/models/Point.ts","../src/models/Rect.ts","../src/models/Size.ts","../src/render/flattenChildren.ts","../src/render/havePropsChanged.ts","../src/render/minifyNode.ts","../src/paint/jobs/PaintJob.ts","../src/paint/getCanvas.ts","../src/paint/jobs/LayerJob.ts","../src/paint/jobs/LayerEndJob.ts","../src/paint/jobs/RectangleJob.ts","../src/paint/jobs/TextJob.ts","../src/paint/jobs/CircleJob.ts","../src/paint/jobs/PathJob.ts","../src/paint/jobs/PolygonJob.ts","../src/paint/jobs/FrameJob.ts","../src/paint/jobs/FrameEndJob.ts","../src/paint/jobs/GroupJob.ts","../src/paint/jobs/GroupEndJob.ts","../src/paint/buildPaintJobs.ts","../src/paint/paint.ts","../src/render/StateManager.ts","../src/render/Supervisor.ts","../src/PinkKoala.tsx","../src/hooks/haveArgsChanged.ts","../src/hooks/invokeOrReturn.ts","../src/hooks/getHookState.ts","../src/hooks/useEffect.ts","../src/hooks/useEventListener.ts","../src/hooks/useReducer.ts","../src/hooks/useState.ts","../src/hooks/useTicker.ts","../src/hooks/useRenderContext.ts","../src/hooks/useLayoutEffect.ts","../src/components/Layer.tsx","../src/components/Rectangle.tsx","../src/components/Circle.tsx","../src/components/Text.tsx","../src/render/translateFrame.ts","../src/components/Row.tsx","../src/components/Column.tsx","../src/components/Polygon.tsx","../src/components/Path.tsx","../src/components/Group.tsx"],"sourcesContent":["import { AttributeCollection } from \"../models\"\nimport { Node, mkRect, Rect } from \"../models\"\n\nexport var Fragment = \"fragment\"\n\n// const fontCanvas = document.createElement(\"canvas\")\n// const fontCtx = fontCanvas.getContext(\"2d\")!\n\nexport function createNode(\n    type: string | Function,\n    props: AttributeCollection,\n    children: Node[],\n    needsDraw: boolean = false\n): Node {\n    let node = createElement(type, props, ...children)\n    node.needsDraw = needsDraw\n    return node\n}\n\nexport function createElement(\n    type: string | Function,\n    props: AttributeCollection,\n    ...children: Node[]\n): Node {\n    let name: string = \"\"\n    if (typeof type === \"string\") {\n        name = type\n    } else if (typeof type === \"function\") {\n        name = type.name\n    }\n\n    // if ([\"text\", \"string\", \"pktext\"].includes(name)) {\n    //     if (children.length > 0) {\n    //         props.text = children.join(\" \")\n    //         children = []\n    //     }\n\n    //     // intrinsic width\n    //     if (props.font) {\n    //         fontCtx.textBaseline = \"top\"\n    //         fontCtx.font = props.font\n    //         let size = fontCtx.measureText(props.text || \"\")\n    //         if (size) {\n    //             props._intrinsicWidth = size.width\n    //             props._intrinsicHeight =\n    //                 size.fontBoundingBoxDescent - size.fontBoundingBoxAscent\n    //         }\n    //     }\n    // }\n\n    console.log(\"createElement\", name, props, children)\n\n    return {\n        type,\n        name,\n        props: {\n            ...props\n        },\n        children: children,\n        alternate: null,\n        hooks: [],\n        needsDraw: false,\n        cache: null,\n        frame: null\n    }\n}\n","import type { Node } from \"./Node\"\n\nexport type EffectHookCallback = () => EffectHookCallback | null | void\nexport type TickHookCallback = (now: number, delta: number) => void\n\nexport type Hook = {\n    state: any\n    queue: any[]\n    pendingEffects: EffectHookCallback[]\n    pendingTicks: EffectHookCallback[]\n    pendingUnmount: EffectHookCallback[]\n    pendingLayout: EffectHookCallback[]\n}\n\nexport function createHook(): Hook {\n    return {\n        state: {},\n        queue: [],\n        pendingEffects: [],\n        pendingTicks: [],\n        pendingUnmount: [],\n        pendingLayout: []\n    }\n}\n","export type Point = {\n\tx: number\n\ty: number\n}\n\nexport function mkPoint(x: number, y: number): Point {\n\treturn { x, y }\n}\n\nexport function pointLerp(a: Point, b: Point, t: number): Point {\n\treturn mkPoint(a.x + (b.x - a.x) * t, a.y + (b.y - a.y) * t)\n}\n\nexport function pointAt(p: Point, angle: number, distance: number): Point {\n\treturn pointLerp(\n\t\tp,\n\t\tmkPoint(\n\t\t\tp.x + Math.cos(angle) * distance,\n\t\t\tp.y + Math.sin(angle) * distance\n\t\t),\n\t\t1\n\t)\n}\n","import type { Point } from \"./Point\"\nimport { mkPoint } from \"./Point\"\n\nexport type Rect = {\n    x: number\n    y: number\n    width: number\n    height: number\n}\n\nexport function mkRect(\n    x: number,\n    y: number,\n    width: number,\n    height: number\n): Rect {\n    return { x, y, width, height }\n}\n\nexport function rectLeft(rect: Rect): number {\n    return rect.x\n}\n\nexport function rectRight(rect: Rect): number {\n    return rect.x + rect.width\n}\n\nexport function rectTop(rect: Rect): number {\n    return rect.y\n}\n\nexport function rectBottom(rect: Rect): number {\n    return rect.y + rect.height\n}\n\nexport function rectCenter(rect: Rect): Point {\n    return mkPoint(rect.x + rect.width / 2, rect.y + rect.height / 2)\n}\n\nexport function rectContains(rect: Rect, point: Point): boolean {\n    return (\n        point.x >= rectLeft(rect) &&\n        point.x <= rectRight(rect) &&\n        point.y >= rectTop(rect) &&\n        point.y <= rectBottom(rect)\n    )\n}\n\nexport function rectIntersects(a: Rect, b: Rect): boolean {\n    return (\n        rectLeft(a) <= rectRight(b) &&\n        rectRight(a) >= rectLeft(b) &&\n        rectTop(a) <= rectBottom(b) &&\n        rectBottom(a) >= rectTop(b)\n    )\n}\n","export type Size = {\n\twidth: number\n\theight: number\n}\n\nexport const mkSize = (width: number, height: number): Size => ({\n\twidth,\n\theight,\n})\n","export function flattenChildren<T>(children: any[]): T[] {\n    let nodes: any[] = []\n    if (Array.isArray(children)) {\n        for (let child of children) {\n            if (Array.isArray(child)) {\n                nodes = nodes.concat(flattenChildren(child))\n            } else if (child) {\n                nodes.push(child)\n            }\n        }\n    }\n    return nodes\n}\n","import type { AttributeCollection } from \"../models\"\n\nexport function havePropsChanged(\n\ta: AttributeCollection,\n\tb: AttributeCollection\n) {\n\tconst ignoreKeys = [\"__source\", \"__self\"]\n\tif (a === null || b === null) {\n\t\treturn true\n\t}\n\tfor (let key in a) {\n\t\tif (ignoreKeys.indexOf(key) === -1) {\n\t\t\tif (Array.isArray(a[key])) {\n\t\t\t\tif (a[key].length !== b[key].length) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i < a[key].length; i++) {\n\t\t\t\t\tif (havePropsChanged(a[key][i], b[key][i])) {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (typeof a[key] === \"object\") {\n\t\t\t\tif (havePropsChanged(a[key], b[key])) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t} else if (a[key] !== b[key]) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false\n}\n","import type { Node } from \"../models\"\n\nexport function minifyNode(node: Node): Node {\n    let mini = {\n        name: node.name,\n        type: node.type,\n        props: node.props,\n        children: node.children,\n        alternate: null,\n        hooks: node.hooks,\n        needsDraw: false,\n        cache: node.cache,\n        frame: node.frame\n    }\n    return pruneGrandChildren(mini)\n}\n\nexport function pruneGrandChildren(node: Node): Node {\n    let children = node.children.map((child) => {\n        let mini = minifyNode(child)\n        if (mini.children.length > 0) {\n            mini.children = mini.children.map((grandChild) => {\n                return minifyNode(grandChild)\n            })\n        }\n        return mini\n    })\n    node.children = children\n    return node\n}\n","import { Node } from \"../../models\"\nimport type { AttributeCollection } from \"../../models/AttributeCollection\"\n\ntype PaintContext = {\n\tcanvas: HTMLCanvasElement | null\n\tcanvasStack: HTMLCanvasElement[]\n}\n\nlet paintContext: PaintContext = {\n\tcanvas: null,\n\tcanvasStack: [],\n}\n\nexport class PaintJob {\n\tpublic node: Node\n\n\tpublic name: string\n\n\tconstructor(node: Node) {\n\t\tthis.name = \"PaintJob\"\n\t\tthis.node = node\n\t}\n\n\tpublic doPainting() {\n\t\tthis.paint()\n\t}\n\n\tpublic paint() {}\n\n\tpublic get canvas(): HTMLCanvasElement | null {\n\t\treturn paintContext.canvas\n\t}\n\n\tpublic set canvas(val: HTMLCanvasElement | null) {\n\t\tpaintContext.canvas = val\n\t}\n\n\tpublic get paintingContext(): PaintContext {\n\t\treturn paintContext\n\t}\n\n\tpublic pushCanvas(canvas: HTMLCanvasElement) {\n\t\tpaintContext.canvasStack.push(canvas)\n\t}\n\n\tpublic popCanvas(): HTMLCanvasElement | null {\n\t\tlet c = paintContext.canvasStack.pop()\n\t\tif (c) {\n\t\t\treturn c\n\t\t} else {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tpublic updateRenderingContextFromProps(\n\t\tctx: any,\n\t\tprops: AttributeCollection\n\t): PaintJobRenderingContextUpdate {\n\t\tlet hasChanged = false\n\t\tlet shouldFill = false\n\t\tlet shouldStroke = false\n\n\t\tconst map: AttributeCollection = {\n\t\t\tfill: \"fillStyle\",\n\t\t\tstroke: \"strokeStyle\",\n\t\t\tstrokeWidth: \"lineWidth\",\n\t\t\tfont: \"font\",\n\t\t}\n\n\t\tfor (let key in map) {\n\t\t\tlet ctxKey = map[key]\n\t\t\tif (props[key] && ctx[ctxKey] !== props[key]) {\n\t\t\t\tctx[ctxKey] = props[key]\n\t\t\t\thasChanged = true\n\t\t\t}\n\t\t\tif (key === \"fill\" && props[key]) {\n\t\t\t\tshouldFill = true\n\t\t\t}\n\t\t\tif (key === \"stroke\" && props[key]) {\n\t\t\t\tshouldStroke = true\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\thasChanged,\n\t\t\tshouldFill,\n\t\t\tshouldStroke,\n\t\t}\n\t}\n}\n\nexport interface PaintJobRenderingContextUpdate {\n\thasChanged: boolean\n\tshouldFill: boolean\n\tshouldStroke: boolean\n}\n","import { getSharedSupervisor } from \"../render/Supervisor\"\n\nexport function getCanvas(id: string): HTMLCanvasElement | undefined {\n    let sup = getSharedSupervisor()\n    const canvases = sup.canvases\n    const canvas = canvases.find((c) => c.id === id)\n    return canvas\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node } from \"../../models\"\nimport { getCanvas } from \"../getCanvas\"\nlet canvasId = 0\n\nexport class LayerJob extends PaintJob {\n\tconstructor(node: Node) {\n\t\tsuper(node)\n\t\tthis.name = \"LayerJob\"\n\t}\n\n\tpublic paint() {\n\t\tlet canvas = getCanvas(this.node.props.id)\n\t\tif (canvas) {\n\t\t\tlet tmpCanvas = this.node.cache as HTMLCanvasElement | null\n\t\t\tif (!tmpCanvas) {\n\t\t\t\ttmpCanvas = document.createElement(\"canvas\")\n\t\t\t\ttmpCanvas.id = `tmp-layer-canvas-${canvasId++}`\n\t\t\t\ttmpCanvas.height = canvas.height\n\t\t\t\ttmpCanvas.width = canvas.width\n\t\t\t\tthis.node.cache = tmpCanvas\n\t\t\t}\n\t\t\tlet tmpContext = tmpCanvas.getContext(\"2d\")\n\t\t\tif (tmpContext) {\n\t\t\t\ttmpContext.clearRect(0, 0, tmpCanvas.width, tmpCanvas.height)\n\t\t\t\tthis.canvas = tmpCanvas\n\t\t\t}\n\t\t}\n\t}\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node } from \"../../models\"\nimport { getCanvas } from \"../getCanvas\"\n\nexport class LayerEndJob extends PaintJob {\n\tconstructor(node: Node) {\n\t\tsuper(node)\n\t\tthis.name = \"LayerEndJob\"\n\t}\n\n\tpublic paint() {\n\t\tlet canvas = getCanvas(this.node.props.id)\n\t\tif (canvas) {\n\t\t\tlet origContext = canvas.getContext(\"2d\")!\n\t\t\torigContext.clearRect(0, 0, canvas.width, canvas.height)\n\t\t\torigContext.drawImage(this.node.cache, 0, 0)\n\n\t\t\t// reset the paint context canvas\n\t\t\tthis.canvas = canvas\n\t\t}\n\t}\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node } from \"../../models\"\n\nexport class RectangleJob extends PaintJob {\n    constructor(node: Node) {\n        super(node)\n        this.name = \"RectangleJob\"\n    }\n\n    public paint() {\n        // parse attributes\n        let frm = this.node.frame!\n\n        // get context\n        if (this.canvas) {\n            let ctx = this.canvas.getContext(\"2d\")!\n            let cu = this.updateRenderingContextFromProps(ctx, this.node.props)\n            if (cu.hasChanged) {\n                ctx.save()\n            }\n\n            ctx.beginPath()\n\n            // fill\n            if (cu.shouldFill) {\n                console.log(\n                    \"RectanbleJob.paint fill\",\n                    frm.x,\n                    frm.y,\n                    frm.width,\n                    frm.height\n                )\n                ctx.fillRect(frm.x, frm.y, frm.width, frm.height)\n            }\n\n            // stroke\n            if (cu.shouldStroke) {\n                ctx.strokeRect(frm.x, frm.y, frm.width, frm.height)\n            }\n\n            if (cu.hasChanged) {\n                ctx.restore()\n            }\n        }\n    }\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node } from \"../../models\"\n\nexport class TextJob extends PaintJob {\n    constructor(node: Node) {\n        super(node)\n        this.name = \"TextJob\"\n    }\n\n    public paint() {\n        // parse attributes\n        let x = this.node.frame!.x\n        let y = this.node.frame!.y\n        let text = (this.node.props.text as string) || \"\"\n\n        // get context\n        if (this.canvas) {\n            let ctx = this.canvas.getContext(\"2d\")!\n            let cu = this.updateRenderingContextFromProps(ctx, this.node.props)\n            if (cu.hasChanged) {\n                ctx.save()\n            }\n\n            ctx.beginPath()\n            let tm = ctx.measureText(text)\n            y = y + tm.actualBoundingBoxAscent\n\n            // fill\n            if (cu.shouldFill) {\n                ctx.fillText(text, x, y)\n            }\n\n            // stroke\n            if (cu.shouldStroke) {\n                ctx.strokeText(text, x, y)\n            }\n\n            if (cu.hasChanged) {\n                ctx.restore()\n            }\n        }\n    }\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node } from \"../../models\"\n\nexport class CircleJob extends PaintJob {\n    constructor(node: Node) {\n        super(node)\n        this.name = \"CircleJob\"\n    }\n\n    public paint() {\n        let frm = this.node.frame!\n\n        // parse attributes\n        let radius = frm.width / 2\n\n        // get context\n        if (this.canvas) {\n            let ctx = this.canvas.getContext(\"2d\")!\n            let cu = this.updateRenderingContextFromProps(ctx, this.node.props)\n            if (cu.hasChanged) {\n                ctx.save()\n            }\n\n            // path\n            ctx.beginPath()\n            ctx.ellipse(\n                frm.x + radius,\n                frm.y + radius,\n                radius,\n                radius,\n                0,\n                0,\n                2 * Math.PI\n            )\n\n            // fill\n            if (cu.shouldFill) {\n                ctx.fill()\n            }\n\n            // stroke\n            if (cu.shouldStroke) {\n                ctx.stroke()\n            }\n\n            if (cu.hasChanged) {\n                ctx.restore()\n            }\n        }\n    }\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node, Points } from \"../../models\"\n\nexport class PathJob extends PaintJob {\n    constructor(node: Node) {\n        super(node)\n        this.name = \"PathJob\"\n    }\n\n    public paint() {\n        let frm = this.node.frame!\n\n        // parse attributes\n        let closePath = this.node.props.closed ? this.node.props.closed : false\n        let path: Points = (this.node.props.path as Points) || []\n\n        // get context\n        if (this.canvas) {\n            let ctx = this.canvas.getContext(\"2d\")!\n            let cu = this.updateRenderingContextFromProps(ctx, this.node.props)\n\n            // save context\n            if (cu.hasChanged) {\n                ctx.save()\n            }\n\n            // path\n            ctx.beginPath()\n            let i = 0\n            for (let pt of path) {\n                if (i === 0) {\n                    ctx.moveTo(frm.x + pt.x, frm.y + pt.y)\n                } else {\n                    ctx.lineTo(frm.x + pt.x, frm.y + pt.y)\n                }\n                i++\n            }\n\n            // close path\n            if (closePath) {\n                ctx.closePath()\n            }\n\n            // fill\n            if (cu.shouldFill) {\n                ctx.fill()\n            }\n\n            // stroke\n            if (cu.shouldStroke) {\n                ctx.stroke()\n            }\n\n            // restore context\n            if (cu.hasChanged) {\n                ctx.restore()\n            }\n        }\n    }\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node, Points, mkPoint, pointAt } from \"../../models\"\n\nexport class PolygonJob extends PaintJob {\n    constructor(node: Node) {\n        super(node)\n        this.name = \"PolygonJob\"\n    }\n\n    public paint() {\n        let frm = this.node.frame!\n\n        // parse attributes\n        let radius = frm.width / 2\n        let sides = parseFloat(this.node.props.sides as string) || 5\n\n        let center = mkPoint(frm.x + radius, frm.y + radius)\n        let angle = (Math.PI * 2) / sides\n\n        let path: Points = []\n        for (let i = 0; i < sides; i++) {\n            let pt = pointAt(center, angle * i, radius)\n            path.push(pt)\n        }\n\n        // get context\n        if (this.canvas) {\n            let ctx = this.canvas.getContext(\"2d\")!\n            let cu = this.updateRenderingContextFromProps(ctx, this.node.props)\n\n            // save context\n            if (cu.hasChanged) {\n                ctx.save()\n            }\n\n            // build path\n            ctx.beginPath()\n            let i = 0\n            for (let pt of path) {\n                if (i === 0) {\n                    ctx.moveTo(pt.x, pt.y)\n                } else {\n                    ctx.lineTo(pt.x, pt.y)\n                }\n                if (i === path.length - 1) {\n                    ctx.closePath()\n                }\n                i++\n            }\n\n            // fill\n            if (cu.shouldFill) {\n                ctx.fill()\n            }\n\n            // stroke\n            if (cu.shouldStroke) {\n                ctx.stroke()\n            }\n\n            // restore\n            if (cu.hasChanged) {\n                ctx.restore()\n            }\n        }\n    }\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node } from \"../../models\"\n\nexport class FrameJob extends PaintJob {\n\tconstructor(node: Node) {\n\t\tsuper(node)\n\t\tthis.name = \"FrameJob\"\n\t}\n\n\tpublic paint() {\n\t\tconsole.log(\"Frame Job\", this.node)\n\t}\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node } from \"../../models\"\n\nexport class FrameEndJob extends PaintJob {\n\tconstructor(node: Node) {\n\t\tsuper(node)\n\t\tthis.name = \"FrameEndJob\"\n\t}\n\n\tpublic paint() {\n\t\tconsole.log(\"FrameEnd Job\", this.node)\n\t}\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node } from \"../../models\"\n\nlet groupId = 0\nexport class GroupJob extends PaintJob {\n    constructor(node: Node) {\n        super(node)\n        this.name = \"GroupJob\"\n    }\n\n    public paint() {\n        let frm = this.node.frame!\n\n        if (this.canvas) {\n            this.pushCanvas(this.canvas)\n            let tmpCanvas = this.node.cache as HTMLCanvasElement | null\n            if (!tmpCanvas) {\n                tmpCanvas = document.createElement(\"canvas\")\n                tmpCanvas.id = `tmp-group-canvas-${groupId++}`\n                tmpCanvas.height = frm.height\n                tmpCanvas.width = frm.width\n                this.node.cache = tmpCanvas\n            }\n            let tmpContext = tmpCanvas.getContext(\"2d\")\n            if (tmpContext) {\n                tmpContext.clearRect(frm.x, frm.y, frm.width, frm.height)\n                this.canvas = tmpCanvas\n            }\n        }\n    }\n}\n","import { PaintJob } from \"./PaintJob\"\nimport { Node } from \"../../models\"\n\nexport class GroupEndJob extends PaintJob {\n    constructor(node: Node) {\n        super(node)\n        this.name = \"GroupEndJob\"\n    }\n\n    public paint() {\n        let frm = this.node.frame!\n\n        if (this.node.needsDraw) {\n            let canvas = this.popCanvas()\n            if (canvas) {\n                let origContext = canvas.getContext(\"2d\")!\n                origContext.drawImage(this.node.cache, frm.x, frm.y)\n\n                // reset the paint context canvas\n                this.canvas = canvas\n            }\n        } else {\n            let canvas = this.canvas\n            if (canvas && this.node.cache) {\n                let ctx = canvas.getContext(\"2d\")\n                ctx?.drawImage(this.node.cache, frm.x, frm.y)\n            }\n        }\n    }\n}\n","import {\n    PaintJob,\n    LayerJob,\n    LayerEndJob,\n    RectangleJob,\n    TextJob,\n    CircleJob,\n    PathJob,\n    PolygonJob,\n    FrameJob,\n    FrameEndJob,\n    GroupJob,\n    GroupEndJob\n} from \"./jobs\"\nimport { Node } from \"../models\"\n\nexport function buildPaintJobs(node: Node): PaintJob[] {\n    let jobs: PaintJob[] = []\n\n    if (node.needsDraw) {\n        // paint jobs\n        switch (node.name) {\n            case \"layer\":\n            case \"pklayer\":\n                jobs.push(new LayerJob(node))\n                break\n\n            case \"frame\":\n            case \"pkframe\":\n                jobs.push(new FrameJob(node))\n                break\n\n            case \"Group\":\n            case \"group\":\n            case \"pkgroup\":\n                jobs.push(new GroupJob(node))\n                break\n\n            case \"Rectangle\":\n            case \"rect\":\n            case \"pkrect\":\n            case \"rectangle\":\n            case \"pkrectangle\":\n                jobs.push(new RectangleJob(node))\n                break\n\n            case \"string\":\n            case \"pkstring\":\n            case \"text\":\n            case \"pktext\":\n                jobs.push(new TextJob(node))\n                break\n\n            case \"Circle\":\n            case \"circle\":\n            case \"pkcircle\":\n                jobs.push(new CircleJob(node))\n                break\n\n            case \"Path\":\n            case \"path\":\n            case \"pkpath\":\n                jobs.push(new PathJob(node))\n                break\n\n            case \"Polygon\":\n            case \"polygon\":\n            case \"pkpolygon\":\n                jobs.push(new PolygonJob(node))\n                break\n        }\n\n        // children jobs\n        for (let child of node.children) {\n            jobs = jobs.concat(buildPaintJobs(child))\n        }\n\n        // cleanup jobs\n        switch (node.name) {\n            case \"layer\":\n            case \"pklayer\":\n                jobs.push(new LayerEndJob(node))\n                break\n\n            case \"frame\":\n            case \"pkframe\":\n                jobs.push(new FrameEndJob(node))\n                break\n\n            case \"Group\":\n            case \"group\":\n            case \"pkgroup\":\n                jobs.push(new GroupEndJob(node))\n                break\n        }\n    } else {\n        // some items still need to draw from cache\n        switch (node.name) {\n            case \"Group\":\n            case \"group\":\n            case \"pkgroup\":\n                jobs.push(new GroupEndJob(node))\n                break\n        }\n    }\n\n    return jobs\n}\n","import { Node } from \"../models\"\nimport { PaintJob } from \"./jobs\"\nimport { buildPaintJobs } from \"./buildPaintJobs\"\n\nlet queue: PaintJob[] = []\n\nexport function paint(node: Node): void {\n\tif (queue.length === 0) {\n\t\tqueue = buildPaintJobs(node)\n\t\tpaintLoop()\n\t}\n}\n\nexport function paintLoop() {\n\tlet job: PaintJob | undefined | null = null\n\twhile (queue.length > 0) {\n\t\tjob = queue.shift()\n\t\tif (job) {\n\t\t\tjob.doPainting()\n\t\t}\n\t}\n}\n","import { mkRect, mkSize, Node, Size, Rect } from \"../models\"\nimport type { AttributeCollection } from \"../models\"\nimport { flattenChildren } from \"./flattenChildren\"\nimport { havePropsChanged } from \"./havePropsChanged\"\nimport { minifyNode } from \"./minifyNode\"\nimport { paint } from \"../paint\"\n\ntype ChildrenDiff = {\n    children: Node[]\n    removed: Node[]\n}\n\nexport class StateManager {\n    public AUTO_LOOP = true\n\n    private paintCount = 0\n\n    public size: Size = mkSize(10, 10)\n    private _nodeFrame: Rect = mkRect(0, 0, 10, 10)\n\n    public _root: Node | null = null\n\n    private _node: Node | null = null\n\n    public currentRoot: Node | null = null\n\n    public unitsOfWork: Node[] = []\n\n    public isRunning = false\n\n    public hasUpdateBeenRequested = false\n\n    public stepCallbackId: number | null = null\n\n    // for hooks\n    public hookIndex: number = 0\n\n    public get root(): Node | null {\n        return this._root\n    }\n\n    public get node(): Node | null {\n        return this._node\n    }\n\n    public set node(val: Node | null) {\n        this._node = val\n    }\n\n    public setRoot(fn: any) {\n        this._root = {\n            name: \"root\",\n            type: fn,\n            props: {},\n            children: [],\n            alternate: null,\n            hooks: [],\n            needsDraw: false,\n            cache: null,\n            frame: mkRect(0, 0, this.size.width, this.size.height)\n        }\n        this.unitsOfWork.push(this._root)\n    }\n\n    constructor() {\n        this.step = this.step.bind(this)\n        if (this.AUTO_LOOP === false) {\n            const onKeyUp = (e: KeyboardEvent) => {\n                if (e.key === \" \") {\n                    this.requestRootUpdate()\n                    let deadline = performance.now() + 16\n                    this.step({\n                        timeRemaining: () => deadline - performance.now(),\n                        didTimeout: false\n                    })\n                }\n            }\n            document.addEventListener(\"keyup\", onKeyUp)\n        }\n    }\n\n    public start() {\n        if (!this.isRunning) {\n            if (window.requestIdleCallback != null) {\n                this.stepCallbackId = requestIdleCallback(this.step)\n            } else {\n                setTimeout(() => {\n                    this.step({\n                        timeRemaining: () => {\n                            return 16\n                        },\n                        didTimeout: false\n                    })\n                }, 10)\n            }\n            this.isRunning = true\n        }\n    }\n\n    public stop() {\n        this.isRunning = false\n        if (this.stepCallbackId) {\n            cancelIdleCallback(this.stepCallbackId)\n            this.stepCallbackId = null\n        }\n    }\n\n    public step(deadline: IdleDeadline) {\n        let start = performance.now()\n\n        // timer based hooks\n        if (this.currentRoot) {\n            this.workTimerHooks(this.currentRoot)\n        }\n\n        if (this.unitsOfWork.length === 0 && this.hasUpdateBeenRequested) {\n            this.startRootUpdate()\n        }\n\n        while (this.unitsOfWork.length > 0 && deadline.timeRemaining() > 2) {\n            this.performNextUnitOfWork()\n        }\n\n        if (this.unitsOfWork.length === 0 && this._root != null) {\n            this.resolveIntrinsicFrames(this._root, null)\n            this.resolveCalculatedFrames(this._root, null)\n            this.workLayoutHooks(this._root)\n            this.commitRoot()\n        }\n\n        if (this.unitsOfWork.length === 0 && this._root === null) {\n            if (this.currentRoot) {\n                this.workEffectHooks(this.currentRoot)\n            }\n        }\n\n        if (this.stepCallbackId) {\n            cancelIdleCallback(this.stepCallbackId)\n            this.stepCallbackId = null\n        }\n        if ((this.isRunning && this.AUTO_LOOP) || this.unitsOfWork.length > 0) {\n            if (window.requestIdleCallback != null) {\n                this.stepCallbackId = requestIdleCallback(this.step)\n            } else {\n                setTimeout(() => {\n                    this.step({\n                        timeRemaining: () => {\n                            return 16\n                        },\n                        didTimeout: false\n                    })\n                }, 10)\n            }\n        }\n\n        let diff = performance.now() - start\n    }\n\n    public performNextUnitOfWork() {\n        let n = this.unitsOfWork.shift()\n        if (n) {\n            this._node = n\n        } else {\n            this._node = null\n        }\n        if (this._node) {\n            this.workEffectHooks(this._node, false)\n            let next: Node[] = this.updateNode(this._node)\n            for (let n of next) {\n                this.unitsOfWork.push(n)\n            }\n        }\n    }\n\n    public commitRoot() {\n        this.currentRoot = this._root\n        this._root = null\n        // TODO: hooks\n        // TODO: deletions\n        if (this.currentRoot) {\n            this.propigateNeedsDraw(this.currentRoot)\n            this.paintCount++\n            console.log(\"StateManager.commitRoot\")\n            //console.log(this.currentRoot)\n            this.debugFrames(this.currentRoot)\n            paint(this.currentRoot)\n        }\n    }\n\n    public resolveCalculatedFrames(node: Node, parent: Node | null): void {\n        if (parent && parent.frame && node.props && node.frame) {\n            if (node.name === \"fragment\") {\n                // create frames for fragments\n                node.frame = { ...parent.frame, x: 0, y: 0 }\n            }\n            // handle percentage based frames\n            let w = node.props.width\n            let r = node.props.radius\n            if (w && typeof w === \"string\" && node.props.width.includes(\"%\")) {\n                let wp = parseFloat(node.props.width) / 100\n                node.frame.width = parent.frame.width * wp\n            }\n            // handle radius property\n            if (!w && r) {\n                if (r && typeof r === \"string\" && r.includes(\"%\")) {\n                    let rp = parseFloat(r) / 100\n                    node.frame.width = parent.frame.width * rp * 2\n                } else {\n                    node.frame.width = parseFloat(r) * 2\n                }\n            }\n            let h = node.props.height\n            if (h && typeof h === \"string\" && node.props.height.includes(\"%\")) {\n                let hp = parseFloat(node.props.height) / 100\n                node.frame.height = parent.frame.height * hp\n            }\n            let x = node.props.x\n            if (x && typeof x === \"string\" && x.includes(\"%\")) {\n                let xp = parseFloat(node.props.x) / 100\n                let xPos = parent.frame.width * xp\n                node.frame.x = xPos\n            }\n            let y = node.props.y\n            if (y && typeof y === \"string\" && y.includes(\"%\")) {\n                let yp = parseFloat(node.props.y) / 100\n                let yPos = parent.frame.height * yp\n                node.frame.y = yPos\n            }\n\n            // translate x and y with parent values\n            node.frame.x = node.frame.x + parent.frame.x\n            node.frame.y = node.frame.y + parent.frame.y\n        }\n\n        for (let child of node.children) {\n            this.resolveCalculatedFrames(child, node)\n        }\n    }\n\n    public resolveIntrinsicFrames(node: Node, parent: Node | null): void {\n        for (let child of node.children) {\n            this.resolveIntrinsicFrames(child, node)\n        }\n\n        let frame = mkRect(0, 0, 0, 0)\n\n        if (node.props.x) {\n            frame.x = parseFloat(node.props.x)\n        }\n\n        if (node.props.y) {\n            frame.y = parseFloat(node.props.y)\n        }\n\n        frame.width = this.resolveWidth(node)\n        frame.height = this.resolveHeight(node)\n\n        node.frame = frame\n    }\n\n    public resolveWidth(node: Node): number {\n        let w = 0\n        if (node.frame && node.frame.width) {\n            w = node.frame.width\n        } else if (node.props.width) {\n            w = parseFloat(node.props.width)\n        } else if (node.props._intrinsicWidth) {\n            w = parseFloat(node.props._intrinsicWidth)\n        } else {\n            for (let child of node.children) {\n                w = Math.max(w, this.resolveWidth(child))\n            }\n        }\n        return w\n    }\n\n    public resolveHeight(node: Node): number {\n        let h = 0\n        if (node.frame && node.frame.height) {\n            h = node.frame.height\n        } else if (node.props.height) {\n            h = parseFloat(node.props.height)\n        } else if (node.props._intrinsicHeight) {\n            h = parseFloat(node.props._intrinsicHeight)\n        } else {\n            for (let child of node.children) {\n                h = Math.max(h, this.resolveHeight(child))\n            }\n        }\n        return h\n    }\n\n    public debugFrames(node: Node, depth: number = 0) {\n        let indent = \"\".padEnd(depth * 4, \" \")\n        if (node.frame) {\n            console.log(\n                indent,\n                node.name,\n                \"x:\",\n                node.frame.x,\n                \", y:\",\n                node.frame.y,\n                \"- w:\",\n                node.frame.width,\n                \", h:\",\n                node.frame.height\n            )\n        } else {\n            console.log(indent, node.name, \"no-frame\", node)\n        }\n\n        for (let child of node.children) {\n            this.debugFrames(child, depth + 1)\n        }\n    }\n\n    public requestRootUpdate(): void {\n        this.hasUpdateBeenRequested = true\n    }\n\n    public startRootUpdate() {\n        this.hasUpdateBeenRequested = false\n        if (this.currentRoot) {\n            this._nodeFrame = mkRect(0, 0, this.size.width, this.size.height)\n            this._root = {\n                name: \"root\",\n                type: this.currentRoot.type,\n                props: {\n                    ...this.currentRoot.props,\n                    width: this.size.width,\n                    height: this.size.height\n                },\n                children: this.currentRoot.children,\n                alternate: minifyNode(this.currentRoot),\n                hooks: this.currentRoot.hooks,\n                needsDraw: false,\n                cache: null,\n                frame: null\n            }\n        }\n        if (this._root) {\n            this.unitsOfWork = [this._root]\n        }\n    }\n\n    workTimerHooks(node: Node) {\n        // children\n        for (let child of node.children) {\n            this.workTimerHooks(child)\n        }\n\n        for (let hook of node.hooks) {\n            for (let action of hook.pendingTicks) {\n                action()\n            }\n            hook.pendingTicks = []\n        }\n    }\n\n    workEffectHooks(node: Node, includeChildren: boolean = true) {\n        // children\n        if (includeChildren) {\n            for (let child of node.children) {\n                this.workEffectHooks(child)\n            }\n        }\n\n        for (let hook of node.hooks) {\n            for (let action of hook.pendingEffects) {\n                let unmount = hook.queue.pop()\n                if (unmount) {\n                    unmount()\n                }\n                let cb = action()\n                if (cb) {\n                    hook.queue.push(cb)\n                }\n            }\n            hook.pendingEffects = []\n        }\n    }\n\n    workLayoutHooks(node: Node) {\n        // children\n        for (let child of node.children) {\n            this.workLayoutHooks(child)\n        }\n\n        this._node = node\n        for (let hook of node.hooks) {\n            for (let action of hook.pendingLayout) {\n                action()\n            }\n            hook.pendingLayout = []\n        }\n        this._node = null\n    }\n\n    public updateNode(node: Node): Node[] {\n        if (!node.alternate) {\n            // new nodes need to be drawn\n            node.needsDraw = true\n        }\n\n        let prevChildren: Node[] = []\n        if (node.type instanceof Function) {\n            // reset hooks, they will be re-added by running the render function\n            this.hookIndex = 0\n            node.hooks = []\n\n            // get the previous children\n            if (node.alternate) {\n                prevChildren = node.alternate.children\n            } else if (node.children) {\n                prevChildren = node.children\n            }\n\n            // get the render function\n            let f = node.type as (\n                props: AttributeCollection,\n                children: any\n            ) => Node\n\n            // execute the render function, and get new children\n            node.children = [f(node.props, node.children)]\n        } else {\n            // for non-function nodes, just use the children\n            prevChildren = node.alternate ? node.alternate.children : []\n        }\n\n        // flatten the children\n        let nextChildren: Node[] = flattenChildren(node.children)\n\n        // diff the children\n        let childDiff = this.diffChildren(nextChildren, prevChildren)\n\n        // handle diffed children\n        node.children = childDiff.children\n\n        // TODO: handle removed children\n\n        // return the next children, for next units of work\n        return node.children\n    }\n\n    public propigateNeedsDraw(\n        parent: Node,\n        inherited: boolean = false\n    ): boolean {\n        let needsDraw =\n            parent.needsDraw ||\n            (inherited &&\n                ![\"pklayer\", \"layer\", \"group\", \"pkgroup\"].includes(parent.name))\n        // propigate up\n        for (let child of parent.children) {\n            needsDraw = needsDraw || this.propigateNeedsDraw(child, needsDraw)\n        }\n        // propigate down to all children\n        if (needsDraw) {\n            for (let child of parent.children) {\n                this.propigateNeedsDraw(child, true)\n            }\n        }\n        parent.needsDraw = needsDraw\n        return needsDraw\n    }\n\n    public diffChildren(\n        nextChildren: Node[],\n        prevChildren: Node[]\n    ): ChildrenDiff {\n        let children: Node[] = []\n        let removed: Node[] = []\n        let length = Math.max(nextChildren.length, prevChildren.length)\n\n        for (let i = 0; i < length; i++) {\n            let next = nextChildren[i]\n            let prev = prevChildren[i]\n            let nextNode = this.diffNode(next, prev)\n            if (nextNode) {\n                children.push(nextNode)\n            }\n            if (prev) {\n                if (!nextNode) {\n                    removed.push(prev)\n                }\n            }\n        }\n\n        return { children, removed }\n    }\n\n    public diffNode(a: Node | null, b: Node | null): Node | null {\n        let next: Node | null = null\n        let sameType = false\n        if (!!a && !!b) {\n            sameType = a.type == b.type\n        }\n\n        if (a && b && sameType) {\n            let needsDraw = false\n            if (havePropsChanged(a.props, b.props)) {\n                needsDraw = true\n            }\n            next = {\n                name: a.name,\n                type: a.type,\n                props: a.props,\n                children: a.children,\n                needsDraw: needsDraw,\n                hooks: b.hooks,\n                cache: b.cache,\n                alternate: minifyNode(b),\n                frame: b.frame\n            }\n        } else if (a && !sameType) {\n            next = {\n                name: a.name,\n                type: a.type,\n                props: a.props,\n                children: a.children,\n                alternate: null,\n                needsDraw: true,\n                hooks: [],\n                cache: null,\n                frame: a.frame\n            }\n        } else {\n            console.error(\"diffNode\", a, b, sameType)\n        }\n\n        return next\n    }\n}\n","import { StateManager } from \"./StateManager\"\n\nexport type Layer = {\n    child: any\n    canvases: any[]\n}\n\nexport class Supervisor {\n    public stateManager: StateManager\n\n    public canvases: HTMLCanvasElement[] = []\n\n    constructor() {\n        this.stateManager = new StateManager()\n    }\n\n    addLayer(layer: Layer) {\n        this.stateManager.setRoot(layer.child)\n        this.canvases = layer.canvases\n    }\n\n    public get currentContext(): StateManager | null {\n        return this.stateManager\n    }\n\n    public get activeLayer(): StateManager | null {\n        return this.stateManager\n    }\n\n    public start(): void {\n        this.activeLayer?.start()\n    }\n\n    public stop(): void {}\n}\n\nlet sharedSupervisor: Supervisor = new Supervisor()\nexport function getSharedSupervisor(): Supervisor {\n    return sharedSupervisor\n}\n","import React, { useRef, useEffect } from \"react\"\nimport type { Size, AttributeCollection } from \"./models/\"\nimport { getSharedSupervisor } from \"./render\"\nimport \"./PinkKoala.css\"\n\nexport type PinkKoalaProps = {\n    drawing: any\n    drawingProps: AttributeCollection | null\n    layers: string[]\n    size: Size\n}\n\nexport const PinkKoala = (props: PinkKoalaProps) => {\n    let containerRef = useRef<HTMLDivElement>(null)\n\n    useEffect(() => {\n        if (containerRef.current) {\n            const canvasNodes = containerRef.current.querySelectorAll(\"canvas\")\n            let canvases = Array.from(canvasNodes).map((node) => {\n                return node as HTMLCanvasElement\n            })\n\n            let sup = getSharedSupervisor()\n            sup.addLayer({\n                child: props.drawing,\n                canvases: canvases\n            })\n            sup.stateManager.size = props.size\n            sup.start()\n        }\n    }, [props.drawing, containerRef, props.size])\n\n    return (\n        <div ref={containerRef} className=\"PinkKoala\">\n            {props.layers.map((layer) => (\n                <canvas\n                    key={layer}\n                    id={layer}\n                    width={props.size.width}\n                    height={props.size.height}\n                />\n            ))}\n        </div>\n    )\n}\n","export function haveArgsChanged(a: any[], b: any[]) {\n\tif (!a && !b) {\n\t\treturn false\n\t}\n\tif ((!a && b) || (!b && a)) {\n\t\t//console.log(\"args changed nulls\", a, b)\n\t\treturn true\n\t}\n\tif (a.length !== b.length) {\n\t\t//console.log(\"args changed length\", a, b)\n\t\treturn true\n\t}\n\tfor (let i = 0; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\t//console.log(\"args changed value\", a, b)\n\t\t\treturn true\n\t\t}\n\t}\n\t//console.log(\"args not chagned\", a, b)\n\treturn false\n}\n","export function invokeOrReturn(arg: any, f: any): any {\n\treturn typeof f == \"function\" ? f(arg) : f\n}\n","import type { Hook } from \"../models\"\nimport { StateManager } from \"../render/StateManager\"\nimport { getSharedSupervisor } from \"../render/Supervisor\"\n\ntype HookState = {\n\tcontext: StateManager | null\n\tprevHook: Hook | null\n}\n\nexport function getHookState(): HookState {\n\tlet hook: Hook | null = null\n\tlet context: StateManager | null = getSharedSupervisor().currentContext\n\n\tif (context) {\n\t\tif (context.node) {\n\t\t\thook =\n\t\t\t\tcontext.node.alternate &&\n\t\t\t\tcontext.node.alternate.hooks &&\n\t\t\t\tcontext.node.alternate.hooks[context.hookIndex]\n\t\t}\n\t}\n\n\treturn {\n\t\tcontext,\n\t\tprevHook: hook,\n\t}\n}\n","import type { EffectHookCallback } from \"../models\"\nimport { createHook } from \"../models\"\nimport { getHookState } from \"./getHookState\"\nimport { haveArgsChanged } from \"./haveArgsChanged\"\n\nexport function useEffect(callback: EffectHookCallback, args: any[]) {\n\tlet hookState = getHookState()\n\tlet prevHook = hookState.prevHook\n\tlet context = hookState.context\n\n\tif (!context || !context.node) {\n\t\tthrow new Error(\n\t\t\t\"useReducer must be called from within a render function\"\n\t\t)\n\t}\n\n\tlet hook = createHook()\n\tif (prevHook) {\n\t\thook.state = prevHook.state\n\t\thook.queue = prevHook.queue\n\t}\n\n\tif (haveArgsChanged(args, prevHook?.state)) {\n\t\thook.pendingEffects.push(callback)\n\t\thook.state = args\n\t}\n\tcontext.node.hooks.push(hook)\n\tcontext.hookIndex++\n}\n","import { useEffect } from \"./useEffect\"\n\nexport function useEventListener(event: string, handler: any, args: any[]) {\n\tuseEffect(() => {\n\t\tdocument.addEventListener(event, handler)\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(event, handler)\n\t\t}\n\t}, [...args, event, handler])\n}\n","import { createHook } from \"../models\"\nimport { getHookState } from \"./getHookState\"\nimport { invokeOrReturn } from \"./invokeOrReturn\"\n\ntype ReducerCallback = (state: any, action: any) => any\n\nexport function useReducer(\n    reducer: any,\n    initialState: any,\n    init: any = null\n): any[] {\n    let hookState = getHookState()\n    let prevHook = hookState.prevHook\n    let context = hookState.context\n\n    if (!context || !context.node) {\n        throw new Error(\n            \"useReducer must be called from within a render function\"\n        )\n    }\n\n    let hook = createHook()\n    if (init) {\n        hook.state = init(initialState)\n    } else {\n        hook.state = prevHook\n            ? prevHook.state\n            : invokeOrReturn(undefined, initialState)\n    }\n\n    const actions = prevHook ? prevHook.queue : []\n    for (let action of actions) {\n        hook.state = reducer(hook.state, action)\n    }\n    if (prevHook) {\n        prevHook.queue = []\n    }\n\n    const dispatch = (action: any) => {\n        hook.queue.push(action)\n        context?.requestRootUpdate()\n    }\n\n    context.node!.hooks.push(hook)\n    context.hookIndex++\n    return [hook.state, dispatch]\n}\n","import { useReducer } from \"./useReducer\"\nimport { createHook } from \"../models\"\nimport { getHookState } from \"./getHookState\"\nimport { invokeOrReturn } from \"./invokeOrReturn\"\n\nexport function useState(initialState: any): any[] {\n\treturn useReducer(invokeOrReturn, initialState)\n}\n","import { getHookState } from \"./getHookState\"\nimport { createHook } from \"../models\"\nimport type { EffectHookCallback, TickHookCallback } from \"../models\"\n\nexport function useTicker(callback: TickHookCallback) {\n\tlet hookState = getHookState()\n\tlet prevHook = hookState.prevHook\n\tlet context = hookState.context\n\n\tif (!context || !context.node) {\n\t\tthrow new Error(\n\t\t\t\"useTicker must be called from within a render function\"\n\t\t)\n\t}\n\n\tconst hook = createHook()\n\thook.state = prevHook ? prevHook.state : { now: -1, delta: -1 }\n\n\tconst onTick = (): EffectHookCallback | null => {\n\t\tlet now = Date.now()\n\t\tlet delta = -1\n\t\tif (prevHook && prevHook.state.lastTick > 0) {\n\t\t\tdelta = now - prevHook.state.lastTick\n\t\t}\n\t\thook.state = { lastTick: now, delta }\n\t\tcallback(now, delta)\n\t\treturn null\n\t}\n\thook.pendingTicks.push(onTick)\n\n\tcontext.node.hooks.push(hook)\n\tcontext.hookIndex++\n}\n","import { useReducer } from \"./useReducer\"\nimport { createHook } from \"../models\"\nimport { getHookState } from \"./getHookState\"\nimport { invokeOrReturn } from \"./invokeOrReturn\"\nimport type { Node } from \"../models\"\n\ntype RenderContextProperties = {\n    rootWidth: number\n    rootHeight: number\n    nodeRef: Node | null\n}\n\nexport function useRenderContext(): RenderContextProperties {\n    const { context } = getHookState()\n\n    let value: RenderContextProperties = {\n        rootWidth: 0,\n        rootHeight: 0,\n        nodeRef: null\n    }\n    if (context) {\n        value = {\n            rootWidth: context.size.width,\n            rootHeight: context.size.height,\n            nodeRef: context.node\n        }\n    }\n    return value\n}\n","import type { EffectHookCallback } from \"../models\"\nimport { createHook } from \"../models\"\nimport { getHookState } from \"./getHookState\"\nimport { haveArgsChanged } from \"./haveArgsChanged\"\n\nexport function useLayoutEffect(callback: EffectHookCallback, args: any[]) {\n    let hookState = getHookState()\n    let prevHook = hookState.prevHook\n    let context = hookState.context\n\n    if (!context || !context.node) {\n        throw new Error(\n            \"useLayoutEffect must be called from within a render function\"\n        )\n    }\n\n    let hook = createHook()\n    if (prevHook) {\n        hook.state = prevHook.state\n        hook.queue = prevHook.queue\n    }\n\n    if (haveArgsChanged(args, prevHook?.state)) {\n        hook.pendingLayout.push(callback)\n        hook.state = args\n    }\n    context.node.hooks.push(hook)\n    context.hookIndex++\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\n/** @jsxFrag Fragment */\n\nimport { createElement, Fragment } from \"../render/\"\nimport { useRenderContext } from \"../hooks\"\n\ntype LayerProps = {\n    id: string\n}\n\nexport const Layer = (props: LayerProps, children: any) => {\n    const { rootWidth, rootHeight } = useRenderContext()\n    const attr = {\n        ...props,\n        width: rootWidth,\n        height: rootHeight\n    }\n    return <pklayer {...attr}>{children}</pklayer>\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\n/** @jsxFrag Fragment */\n\nimport { createElement, Fragment } from \"../render/\"\n\ntype RectangleProps = {\n    x?: number | string\n    y?: number | string\n    width?: number | string\n    height?: number | string\n    fill?: string\n    stroke?: string\n    strokeWidth?: number\n    flex?: number | string\n}\n\nexport const Rectangle = (props: RectangleProps, children: any) => {\n    //console.log(\"Rectangle\", props, children)\n    if (children && children.length > 0) {\n        return <Fragment>{children}</Fragment>\n    } else {\n        return null\n    }\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\n/** @jsxFrag Fragment */\n\nimport { createElement, Fragment } from \"../render/\"\n\ntype CircleProps = {\n    x?: number | string\n    y?: number | string\n    width?: number | string\n    height?: number | string\n    radius?: number | string\n    fill?: string\n    stroke?: string\n    strokeWidth?: number\n    flex?: number | string\n}\n\nexport const Circle = (props: CircleProps, children: any) => {\n    //console.log(\"Circle\", props, children)\n    if (children && children.length > 0) {\n        return <Fragment>{children}</Fragment>\n    } else {\n        return null\n    }\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\n/** @jsxFrag Fragment */\n\nimport { createElement, Fragment } from \"../render/\"\n\ntype TextProps = {\n    x?: number\n    y?: number\n    width?: number\n    height?: number\n    fill?: string\n    stroke?: string\n    strokeWidth?: number\n    font?: string\n}\ntype TextAttr = {\n    text: string\n    x?: number\n    y?: number\n    width?: number\n    height?: number\n    fill?: string\n    stroke?: string\n    strokeWidth?: number\n    font?: string\n    _intrinsicWidth?: number\n    _intrinsicHeight?: number\n}\n\nconst fontCanvas = document.createElement(\"canvas\")\nconst fontCtx = fontCanvas.getContext(\"2d\")!\n\nexport const Text = (props: TextProps, children: any) => {\n    let attr: TextAttr = { ...props, text: \"\" }\n\n    // find intrinsic width and height\n    let text = \"\"\n    if (children && children.length > 0) {\n        text = children.join(\" \")\n    }\n    attr.text = text\n\n    // intrinsic width\n    if (props.font) {\n        fontCtx.textBaseline = \"top\"\n        fontCtx.font = props.font\n        let size = fontCtx.measureText(text || \"\")\n        if (size) {\n            attr._intrinsicWidth = size.width\n            attr._intrinsicHeight =\n                size.fontBoundingBoxDescent - size.fontBoundingBoxAscent\n        }\n    }\n\n    return <pktext {...attr} />\n}\n","import type { Node } from \"../models\"\n\nexport function translateFrame(node: Node, x: number, y: number): void {\n    if (node.frame) {\n        node.frame.x += x\n        node.frame.y += y\n    }\n    for (let child of node.children) {\n        translateFrame(child, x, y)\n    }\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\n/** @jsxFrag Fragment */\nimport { mkRect, Node } from \"../models\"\nimport { createElement, Fragment } from \"../render/\"\nimport { useLayoutEffect, useRenderContext } from \"../hooks\"\nimport { translateFrame } from \"../render/translateFrame\"\n\nexport function Row(props: any, children: any) {\n    console.log(\"Row.props\", props)\n    console.log(\"Row.children\", children)\n\n    // let height = props.height ? parseFloat(props.height) : 0\n    let justifyContent = props.justifyContent ? props.justifyContent : \"start\"\n    let alignItems = props.alignItems ? props.alignItems : \"start\"\n\n    useLayoutEffect(() => {\n        const { nodeRef } = useRenderContext()\n        if (nodeRef) {\n            let x = nodeRef.frame!.x\n            let y = nodeRef.frame!.y\n            let width: number | null = null\n            if (props.width) {\n                width = nodeRef.frame!.width\n            }\n            let height: number | null = null\n            if (props.height) {\n                height = nodeRef.frame!.height\n            }\n            const refChildren = nodeRef.children[0].children\n\n            let childPadding = 0\n            let childWidth = 0\n            let childHeight = 0\n            for (let child of refChildren) {\n                console.log(\n                    \"Row.useLayoutEffect start\",\n                    child.name,\n                    child.frame\n                )\n                if (child.frame) {\n                    childWidth += child.frame.width\n                    childHeight = Math.max(childHeight, child.frame.height)\n                } else {\n                    console.error(\"Row: child has no frame\", child)\n                }\n            }\n            if (width === null) {\n                width = childWidth\n                nodeRef.frame!.width = width\n            }\n            nodeRef.children[0].frame!.width = width\n            if (height === null) {\n                height = childHeight\n                nodeRef.frame!.height = height\n            }\n            nodeRef.children[0].frame!.height = height\n\n            switch (justifyContent) {\n                case \"flex-start\":\n                case \"start\":\n                    // nothing to do\n                    break\n                case \"flex-end\":\n                case \"end\":\n                    x = x + width - childWidth\n                    break\n                case \"center\":\n                    x = x + (width - childWidth) / 2\n                    break\n                case \"space-between\":\n                    childPadding = (width - childWidth) / (children.length - 1)\n                    break\n                case \"space-around\":\n                    childPadding = (width - childWidth) / 2\n                    break\n                case \"space-evenly\":\n                    childPadding = (width - childWidth) / (children.length + 1)\n                    break\n            }\n\n            for (let child of refChildren) {\n                if (!child.frame) {\n                    child.frame = mkRect(0, 0, 0, 0)\n                    console.error(\"Row: child has no frame\", child)\n                }\n                let cy = y\n                let ch = child.frame.height\n                switch (alignItems) {\n                    case \"flex-start\":\n                    case \"start\":\n                        // nothing to do\n                        break\n                    case \"flex-end\":\n                    case \"end\":\n                        cy = y + height - child.frame.height\n                        break\n                    case \"center\":\n                    case \"baseline\":\n                        cy = y + (height - child.frame.height) / 2\n                        break\n                    case \"stretch\":\n                        ch = height\n                        // nothing to do\n                        break\n                }\n\n                translateFrame(child, x, cy)\n                child.frame.height = ch\n                console.log(\"Row.useLayoutEffect end\", child.name, child.frame)\n                x += child.frame.width\n                x += childPadding\n            }\n        }\n    }, [children, justifyContent, alignItems])\n\n    return <Fragment>{children}</Fragment>\n}\n\nfunction findBoxWidth(node: Node, depth = 0): number {\n    let width = 0\n    if (node.props) {\n        if (node.props.width) {\n            width = parseFloat(node.props.width)\n        } else if (node.props._intrinsicWidth) {\n            width = parseFloat(node.props._intrinsicWidth)\n        } else if (node.children) {\n            for (let child of node.children) {\n                let cw = findBoxWidth(child, depth + 1)\n                if (cw > width) {\n                    width = cw\n                }\n            }\n        }\n    } else {\n        console.error(\"findBoxWidth: node has no props\", node)\n    }\n    console.log(\"findBoxWidth\", node.name, width, node)\n    return width\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\n/** @jsxFrag Fragment */\nimport { mkRect, Node } from \"../models\"\nimport { createElement, Fragment } from \"../render/\"\nimport { useLayoutEffect, useRenderContext } from \"../hooks\"\nimport { translateFrame } from \"../render/translateFrame\"\n\nexport function Column(props: any, children: any) {\n    console.log(\"Column.props\", props)\n    console.log(\"Column.children\", children)\n\n    // let height = props.height ? parseFloat(props.height) : 0\n    let justifyContent = props.justifyContent ? props.justifyContent : \"start\"\n    let alignItems = props.alignItems ? props.alignItems : \"start\"\n\n    useLayoutEffect(() => {\n        const { nodeRef } = useRenderContext()\n        if (nodeRef) {\n            let x = nodeRef.frame!.x\n            let y = nodeRef.frame!.y\n            let width: number | null = null\n            if (props.width) {\n                width = nodeRef.frame!.width\n            }\n            let height: number | null = null\n            if (props.height) {\n                height = nodeRef.frame!.height\n            }\n            const refChildren = nodeRef.children[0].children\n\n            let childPadding = 0\n            let childWidth = 0\n            let childHeight = 0\n            let flexCount = 0\n            let flexibleHight = height ? height : 0\n\n            // find flex count of children\n            for (let child of refChildren) {\n                if (child.props.flex) {\n                    try {\n                        let flexNum = parseInt(child.props.flex, 10)\n                        flexCount += flexNum\n                    } catch (e) {\n                        console.warn(e)\n                    }\n                } else if (child.frame) {\n                    flexibleHight -= child.frame.height\n                }\n            }\n\n            // update child frames and calculate column height and width\n            for (let child of refChildren) {\n                console.log(\n                    \"Column.useLayoutEffect start\",\n                    child.name,\n                    child.frame\n                )\n                if (child.frame && child.props.flex && height) {\n                    try {\n                        let flexNum = parseInt(child.props.flex, 10)\n                        let flexRatio = flexNum / flexCount\n                        child.frame.height = flexRatio * flexibleHight\n                        console.log(\n                            \"Column: flex height\",\n                            child.name,\n                            child.frame.height,\n                            flexRatio\n                        )\n                        childHeight += child.frame.height\n                        childWidth = Math.max(childWidth, child.frame.width)\n                    } catch (e) {\n                        console.warn(e)\n                    }\n                } else if (child.frame) {\n                    childHeight += child.frame.height\n                    childWidth = Math.max(childWidth, child.frame.width)\n                } else {\n                    console.error(\"Column: child has no frame\", child)\n                }\n            }\n\n            // update the real col element frame width\n            if (width === null) {\n                width = childWidth\n                nodeRef.frame!.width = width\n            }\n            nodeRef.children[0].frame!.width = width\n\n            // update the real col element frame height\n            if (height === null) {\n                height = childHeight\n                nodeRef.frame!.height = height\n            }\n            nodeRef.children[0].frame!.height = height\n\n            // justify content\n            switch (justifyContent) {\n                case \"flex-start\":\n                case \"start\":\n                    // nothing to do\n                    break\n                case \"flex-end\":\n                case \"end\":\n                    y = y + height - childHeight\n                    break\n                case \"center\":\n                    y = y + (height - childHeight) / 2\n                    break\n                case \"space-between\":\n                    childPadding =\n                        (height - childHeight) / (children.length - 1)\n                    break\n                case \"space-around\":\n                    childPadding = (height - childHeight) / 2\n                    break\n                case \"space-evenly\":\n                    childPadding =\n                        (height - childHeight) / (children.length + 1)\n                    break\n            }\n\n            // align items\n            for (let child of refChildren) {\n                if (!child.frame) {\n                    child.frame = mkRect(0, 0, 0, 0)\n                    console.error(\"Column: child has no frame\", child)\n                }\n                let cx = x\n                let cw = child.frame.width\n                switch (alignItems) {\n                    case \"flex-start\":\n                    case \"start\":\n                        // nothing to do\n                        break\n                    case \"flex-end\":\n                    case \"end\":\n                        cx = x + width - child.frame.width\n                        break\n                    case \"center\":\n                    case \"baseline\":\n                        cx = x + (width - child.frame.width) / 2\n                        break\n                    case \"stretch\":\n                        cw = width\n                        // nothing to do\n                        break\n                }\n\n                translateFrame(child, cx, y)\n                child.frame.width = cw\n                console.log(\n                    \"Column.useLayoutEffect end\",\n                    child.name,\n                    child.frame\n                )\n                y += child.frame.height\n                y += childPadding\n            }\n        }\n    }, [children, justifyContent, alignItems])\n\n    return <Fragment>{children}</Fragment>\n}\n\nfunction findBoxWidth(node: Node, depth = 0): number {\n    let width = 0\n    if (node.props) {\n        if (node.props.width) {\n            width = parseFloat(node.props.width)\n        } else if (node.props._intrinsicWidth) {\n            width = parseFloat(node.props._intrinsicWidth)\n        } else if (node.children) {\n            for (let child of node.children) {\n                let cw = findBoxWidth(child, depth + 1)\n                if (cw > width) {\n                    width = cw\n                }\n            }\n        }\n    } else {\n        console.error(\"findBoxWidth: node has no props\", node)\n    }\n    console.log(\"findBoxWidth\", node.name, width, node)\n    return width\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\n/** @jsxFrag Fragment */\n\nimport { createElement, Fragment } from \"../render/\"\n\ntype PolygonProps = {\n    x?: number | string\n    y?: number | string\n    width?: number | string\n    height?: number | string\n    radius?: number | string\n    sides?: number | string\n    fill?: string\n    stroke?: string\n    strokeWidth?: number\n    flex?: number | string\n}\n\nexport const Polygon = (props: PolygonProps, children: any) => {\n    //console.log(\"Polygon\", props, children)\n    if (children && children.length > 0) {\n        return <Fragment>{children}</Fragment>\n    } else {\n        return null\n    }\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\n/** @jsxFrag Fragment */\nimport { Points } from \"../models\"\n\nimport { createElement, Fragment } from \"../render\"\n\ntype PathProps = {\n    x?: number | string\n    y?: number | string\n    width?: number | string\n    height?: number | string\n    closed?: boolean | string\n    path?: Points\n    fill?: string\n    stroke?: string\n    strokeWidth?: number\n    flex?: number | string\n}\n\nexport const Path = (props: PathProps, children: any) => {\n    //console.log(\"Path\", props, children)\n    if (children && children.length > 0) {\n        return <Fragment>{children}</Fragment>\n    } else {\n        return null\n    }\n}\n","/** @jsxRuntime classic */\n/** @jsx createElement */\n/** @jsxFrag Fragment */\n\nimport { createElement, Fragment } from \"../render\"\n\ntype GroupProps = {\n    x?: number | string\n    y?: number | string\n    width?: number | string\n    height?: number | string\n    flex?: number | string\n}\n\nexport const Group = (props: GroupProps, children: any) => {\n    //console.log(\"Path\", props, children)\n    if (children && children.length > 0) {\n        return <Fragment>{children}</Fragment>\n    } else {\n        return null\n    }\n}\n"],"names":["Fragment","createElement","type","props","name","children","console","log","alternate","hooks","needsDraw","cache","frame","createHook","state","queue","pendingEffects","pendingTicks","pendingUnmount","pendingLayout","mkPoint","x","y","pointLerp","a","b","t","pointAt","p","angle","distance","Math","cos","sin","mkRect","width","height","rectLeft","rect","rectRight","rectTop","rectBottom","rectCenter","rectContains","point","rectIntersects","mkSize","flattenChildren","nodes","Array","isArray","child","concat","push","havePropsChanged","ignoreKeys","key","indexOf","length","i","minifyNode","node","mini","pruneGrandChildren","map","grandChild","paintContext","canvas","canvasStack","PaintJob","doPainting","paint","pushCanvas","popCanvas","c","pop","updateRenderingContextFromProps","ctx","hasChanged","shouldFill","shouldStroke","fill","stroke","strokeWidth","font","ctxKey","val","getCanvas","id","sup","getSharedSupervisor","canvases","find","canvasId","LayerJob","tmpCanvas","document","tmpContext","getContext","clearRect","LayerEndJob","origContext","drawImage","RectangleJob","frm","cu","save","beginPath","fillRect","strokeRect","restore","TextJob","text","tm","measureText","actualBoundingBoxAscent","fillText","strokeText","CircleJob","radius","ellipse","PI","PathJob","closePath","closed","path","pt","moveTo","lineTo","PolygonJob","sides","parseFloat","center","FrameJob","FrameEndJob","groupId","GroupJob","GroupEndJob","buildPaintJobs","jobs","paintLoop","job","shift","StateManager","step","bind","AUTO_LOOP","onKeyUp","e","requestRootUpdate","deadline","performance","now","timeRemaining","didTimeout","addEventListener","setRoot","fn","_root","size","unitsOfWork","start","isRunning","window","requestIdleCallback","stepCallbackId","setTimeout","stop","cancelIdleCallback","currentRoot","workTimerHooks","hasUpdateBeenRequested","startRootUpdate","performNextUnitOfWork","resolveIntrinsicFrames","resolveCalculatedFrames","workLayoutHooks","commitRoot","workEffectHooks","diff","n","_node","next","updateNode","propigateNeedsDraw","paintCount","debugFrames","parent","w","r","includes","wp","rp","h","hp","xp","xPos","yp","yPos","resolveWidth","resolveHeight","_intrinsicWidth","max","_intrinsicHeight","depth","indent","padEnd","_nodeFrame","hook","action","includeChildren","unmount","cb","prevChildren","Function","hookIndex","f","nextChildren","childDiff","diffChildren","inherited","removed","prev","nextNode","diffNode","sameType","error","Supervisor","stateManager","addLayer","layer","activeLayer","sharedSupervisor","PinkKoala","containerRef","useRef","useEffect","current","canvasNodes","querySelectorAll","from","drawing","React","ref","className","layers","haveArgsChanged","invokeOrReturn","arg","getHookState","context","currentContext","prevHook","callback","args","hookState","Error","useEventListener","event","handler","removeEventListener","useReducer","reducer","initialState","init","undefined","actions","dispatch","useState","useTicker","delta","onTick","Date","lastTick","useRenderContext","value","rootWidth","rootHeight","nodeRef","useLayoutEffect","Layer","attr","Rectangle","Circle","fontCanvas","fontCtx","Text","join","textBaseline","fontBoundingBoxDescent","fontBoundingBoxAscent","translateFrame","Row","justifyContent","alignItems","refChildren","childPadding","childWidth","childHeight","cy","ch","Column","flexCount","flexibleHight","flex","flexNum","parseInt","warn","flexRatio","cx","cw","Polygon","Path","Group"],"mappings":"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"}